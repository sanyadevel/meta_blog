[{"/Users/sanyadev/blog_app/src/index.tsx":"1","/Users/sanyadev/blog_app/src/App.tsx":"2","/Users/sanyadev/blog_app/src/store/index.ts":"3","/Users/sanyadev/blog_app/src/reducers/rootReducer.ts":"4","/Users/sanyadev/blog_app/src/components/Header/index.ts":"5","/Users/sanyadev/blog_app/src/components/ArticleList/index.ts":"6","/Users/sanyadev/blog_app/src/components/LoginPage/index.ts":"7","/Users/sanyadev/blog_app/src/components/SignUpPage/index.ts":"8","/Users/sanyadev/blog_app/src/components/ArticleList/ArticleList.tsx":"9","/Users/sanyadev/blog_app/src/components/Header/Header.tsx":"10","/Users/sanyadev/blog_app/src/components/LoginPage/LoginPage.tsx":"11","/Users/sanyadev/blog_app/src/components/SignUpPage/SignUpPage.tsx":"12","/Users/sanyadev/blog_app/src/components/Article/index.ts":"13","/Users/sanyadev/blog_app/src/components/Article/Article.tsx":"14","/Users/sanyadev/blog_app/src/components/PageIsNotFound/index.ts":"15","/Users/sanyadev/blog_app/src/components/PageIsNotFound/PageIsNotFound.tsx":"16","/Users/sanyadev/blog_app/src/logics/rtkQueryLogics/getArticlesFromApi.ts":"17","/Users/sanyadev/blog_app/src/slices/articleSlice.ts":"18","/Users/sanyadev/blog_app/src/components/Loader/index.ts":"19","/Users/sanyadev/blog_app/src/components/Loader/Loader.tsx":"20","/Users/sanyadev/blog_app/src/variables/emailRegex.ts":"21","/Users/sanyadev/blog_app/src/slices/userRegistration.ts":"22","/Users/sanyadev/blog_app/src/slices/userLogin.ts":"23","/Users/sanyadev/blog_app/src/logics/date/formateDate.ts":"24","/Users/sanyadev/blog_app/src/logics/errors/callLoginErrors.ts":"25","/Users/sanyadev/blog_app/src/components/UserPage/index.ts":"26","/Users/sanyadev/blog_app/src/components/UserPage/UserPage.tsx":"27","/Users/sanyadev/blog_app/src/slices/userProfileInfo.ts":"28","/Users/sanyadev/blog_app/src/components/CustomArticle/index.ts":"29","/Users/sanyadev/blog_app/src/components/CustomArticle/CustomArticle.tsx":"30","/Users/sanyadev/blog_app/src/slices/fullArticlePage.ts":"31","/Users/sanyadev/blog_app/src/components/FullPageArticle/index.ts":"32","/Users/sanyadev/blog_app/src/components/FullPageArticle/FullPageArticle.tsx":"33"},{"size":327,"mtime":1682594077218,"results":"34","hashOfConfig":"35"},{"size":1463,"mtime":1683025777487,"results":"36","hashOfConfig":"35"},{"size":918,"mtime":1682969960690,"results":"37","hashOfConfig":"35"},{"size":641,"mtime":1682970465059,"results":"38","hashOfConfig":"35"},{"size":55,"mtime":1682032777808,"results":"39","hashOfConfig":"35"},{"size":70,"mtime":1682077699473,"results":"40","hashOfConfig":"35"},{"size":64,"mtime":1682030949535,"results":"41","hashOfConfig":"35"},{"size":67,"mtime":1682030914770,"results":"42","hashOfConfig":"35"},{"size":2306,"mtime":1683036053219,"results":"43","hashOfConfig":"35"},{"size":1146,"mtime":1682679091698,"results":"44","hashOfConfig":"35"},{"size":5218,"mtime":1683021142120,"results":"45","hashOfConfig":"35"},{"size":7573,"mtime":1683025565607,"results":"46","hashOfConfig":"35"},{"size":58,"mtime":1682077835127,"results":"47","hashOfConfig":"35"},{"size":2420,"mtime":1683025185073,"results":"48","hashOfConfig":"35"},{"size":79,"mtime":1682155360722,"results":"49","hashOfConfig":"35"},{"size":407,"mtime":1682156536524,"results":"50","hashOfConfig":"35"},{"size":687,"mtime":1682165334069,"results":"51","hashOfConfig":"35"},{"size":875,"mtime":1683018055057,"results":"52","hashOfConfig":"35"},{"size":55,"mtime":1682162654149,"results":"53","hashOfConfig":"35"},{"size":438,"mtime":1682162746384,"results":"54","hashOfConfig":"35"},{"size":80,"mtime":1682296770797,"results":"55","hashOfConfig":"35"},{"size":1039,"mtime":1682458061799,"results":"56","hashOfConfig":"35"},{"size":969,"mtime":1682460038446,"results":"57","hashOfConfig":"35"},{"size":498,"mtime":1682943096716,"results":"58","hashOfConfig":"35"},{"size":286,"mtime":1682599833093,"results":"59","hashOfConfig":"35"},{"size":61,"mtime":1682413189866,"results":"60","hashOfConfig":"35"},{"size":1577,"mtime":1683025551656,"results":"61","hashOfConfig":"35"},{"size":933,"mtime":1682635158327,"results":"62","hashOfConfig":"35"},{"size":76,"mtime":1682677608840,"results":"63","hashOfConfig":"35"},{"size":5186,"mtime":1682941939114,"results":"64","hashOfConfig":"35"},{"size":910,"mtime":1683020397814,"results":"65","hashOfConfig":"35"},{"size":83,"mtime":1683013980231,"results":"66","hashOfConfig":"35"},{"size":3798,"mtime":1683036203385,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"sa1s4y",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sanyadev/blog_app/src/index.tsx",[],[],[],"/Users/sanyadev/blog_app/src/App.tsx",[],[],"/Users/sanyadev/blog_app/src/store/index.ts",[],[],"/Users/sanyadev/blog_app/src/reducers/rootReducer.ts",[],[],"/Users/sanyadev/blog_app/src/components/Header/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/ArticleList/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/LoginPage/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/SignUpPage/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/ArticleList/ArticleList.tsx",[],["170","171","172"],"/Users/sanyadev/blog_app/src/components/Header/Header.tsx",[],[],"/Users/sanyadev/blog_app/src/components/LoginPage/LoginPage.tsx",["173"],[],"import React, { FC, useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { ToastContainer } from 'react-toastify';\n\nimport { emailRegex } from '../../variables/emailRegex';\nimport signUpPageStyles from '../SignUpPage/SignUpPage.module.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useLoginUserMutation, UserLoginDetails } from '../../slices/userLogin';\nimport { callNotification } from '../../logics/errors/callLoginErrors';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { changeUserActiveStatus, uploadUserInfo } from '../../slices/userProfileInfo';\n\nimport loginPageStyles from './LoginPage.module.scss';\n\nconst LoginPage: FC = () => {\n  const [isLoginButtonDisabled, setIsLoginButtonDisabled] =\n    useState<boolean>(true);\n\n  const [isLoginError, setIsLoginError] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoginError) {\n      callNotification('Email or password is incorrect', 'error');\n    }\n  }, [isLoginError]);\n\n  const [loginUserMutation] = useLoginUserMutation();\n  const dispatch = useAppDispatch();\n  const userInfo = useAppSelector((state) => state.userInfo.userDatas);\n\n  useEffect(() => {\n    console.log(userInfo, 'userInfo');\n  }, [userInfo]);\n\n  const schema = yup\n    .object({\n      email: yup\n        .string()\n        .min(6)\n        .max(35)\n        .matches(emailRegex, 'Please enter a valid email address')\n        .required(),\n      password: yup.string().min(6).max(25).required(),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    watch,\n  } = useForm<FormData>({\n    resolver: yupResolver(schema),\n    mode: 'onBlur',\n  });\n\n  const loginInput = watch('email');\n  const passwordInput = watch('password');\n\n  useEffect(() => {\n    if (loginInput?.match(emailRegex) && passwordInput?.length >= 6) {\n      setIsLoginButtonDisabled(false);\n    } else {\n      setIsLoginButtonDisabled(true);\n    }\n  }, [loginInput, passwordInput]);\n\n  const submitAuthDetails = async (data: FormData): Promise<void> => {\n    const userLoginDatas: UserLoginDetails = {\n      user: {\n        email: data?.email,\n        password: data?.password,\n      },\n    };\n\n    try {\n      const userDatas = await loginUserMutation(userLoginDatas).unwrap();\n      setIsLoginError(false);\n      if ('user' in userDatas) {\n        dispatch(uploadUserInfo({ userDatas: userDatas.user }));\n        dispatch(changeUserActiveStatus({ isUserLoggedIn: true }));\n        return navigate('/profile');\n      }\n    } catch (error: any) {\n      if (error?.status === 403) {\n        setIsLoginError(true);\n      }\n    }\n    reset();\n  };\n\n  type FormData = yup.InferType<typeof schema>;\n\n  return (\n    <div className={loginPageStyles.main}>\n      <div\n        className={`${loginPageStyles.container} ${signUpPageStyles.container}`}\n      >\n        <h3 className={signUpPageStyles.title}>Sign In</h3>\n        <form\n          className={signUpPageStyles.form}\n          onSubmit={handleSubmit(submitAuthDetails)}\n        >\n          <label className={signUpPageStyles.label}>Email address</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"text\"\n              className={\n                errors.email\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"Email address\"\n              {...register('email', { required: 'Email Address is required' })}\n            />\n            {errors.email && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                Please enter a valid email address\n              </p>\n            )}\n          </div>\n          <label className={signUpPageStyles.label}>Password</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"password\"\n              className={\n                errors.password\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"Password\"\n              {...register('password', { required: 'Password is required' })}\n            />\n            {errors.password && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                Your password needs to be at least 6 characters.\n              </p>\n            )}\n          </div>\n          <ToastContainer />\n          <input\n            type=\"submit\"\n            className={`${signUpPageStyles.input} ${signUpPageStyles.submitButton}`}\n            value=\"Login\"\n            disabled={isLoginButtonDisabled}\n          />\n          <h3 className={signUpPageStyles.alreadyHaveAccount}>\n            Already have an account?\n            <Link\n              to=\"/sign-up\"\n              className={signUpPageStyles.alreadyHaveAccount__link}\n            >\n              Sign Up.\n            </Link>\n          </h3>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/Users/sanyadev/blog_app/src/components/SignUpPage/SignUpPage.tsx",["174"],[],"import React, { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { ToastContainer } from 'react-toastify';\n\nimport { emailRegex } from '../../variables/emailRegex';\nimport { useRegisterUserMutation } from '../../slices/userRegistration';\nimport { callNotification } from '../../logics/errors/callLoginErrors';\n\nimport signUpPageStyles from './SignUpPage.module.scss';\n\nexport interface IRegistrationErrors {\n  email?: string[] | undefined;\n  password?: string[] | undefined;\n  username?: string[] | undefined;\n}\n\nconst SignUpPage: FC = () => {\n  const [registerUser] = useRegisterUserMutation();\n  const [registrationErrors, setRegistrationErrors] =\n    useState<IRegistrationErrors>({});\n\n  const [isChecked, setIsChecked] = useState<boolean>(false);\n  const [isSignUpErrors, setIsSignUpErrors] = useState<boolean>(false);\n\n\n  const schema = yup\n    .object({\n      userName: yup.string().min(3).max(20).required(),\n      email: yup\n        .string()\n        .min(11)\n        .max(40)\n        .required()\n        .test(\n          'is-valid-email',\n          'Please enter a valid email address',\n          (value) => {\n            return emailRegex.test(value);\n          },\n        ),\n      password: yup.string().min(6).max(40).required('Password is required'),\n      passwordConfirmation: yup\n        .string()\n        .oneOf([yup.ref('password'), undefined], 'Passwords must match'),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<FormData>({\n    resolver: yupResolver(schema),\n    mode: 'onBlur',\n  });\n\n  type FormData = yup.InferType<typeof schema>;\n\n  const submitRegistrationDatas = async (data: FormData): Promise<void> => {\n    const userDatas = {\n      user: {\n        username: data?.userName,\n        email: data?.email,\n        password: data?.passwordConfirmation,\n      },\n    };\n\n    try {\n      const result = await registerUser(userDatas).unwrap();\n      if (result) {\n        callNotification('Congratulations, your account was successful created', 'success');\n      }\n    } catch (error: any) {\n      if (error?.status === 422) {\n        setRegistrationErrors(error?.data?.errors);\n      }\n    }\n    await reset();\n  };\n\n  return (\n<>\n    <div className={signUpPageStyles.main}>\n      <div className={signUpPageStyles.container}>\n        <ToastContainer className={signUpPageStyles.notification} />\n        <h2 className={signUpPageStyles.title}>Create new account</h2>\n\n        <form\n          className={signUpPageStyles.form}\n          onSubmit={handleSubmit(submitRegistrationDatas)}\n        >\n          <label className={signUpPageStyles.label}>Username</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"text\"\n              className={\n                errors.userName\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"some-username\"\n              {...register('userName', {\n                required: 'Username is required',\n                minLength: {\n                  value: 3,\n                  message: 'Username needs to be more than 3 characters',\n                },\n              })}\n            />\n            {errors.userName && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                Username {errors?.userName?.message?.split(' ').slice(1).join(' ')}\n              </p>\n            )}\n            {(registrationErrors?.username?.length ?? 0) > 0 && (\n              <p className={signUpPageStyles.inputErrorTextLabel}>\n                Username has already been taken\n              </p>\n            )}\n          </div>\n\n          <label className={signUpPageStyles.label}>Email address</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"text\"\n              className={\n                errors.email\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"alex@example.com\"\n              {...register('email', {\n                required: 'Email is required',\n                minLength: {\n                  value: 6,\n                  message: 'Email needs to be more than 6 characters',\n                },\n                maxLength: {\n                  value: 40,\n                  message: 'Enter a valid email adress',\n                },\n              })}\n            />\n            {errors.email && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                Email {errors?.email?.message?.split(' ').slice(1).join(' ')}\n              </p>\n            )}\n          </div>\n\n          <label className={signUpPageStyles.label}>Password</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"password\"\n              className={\n                errors.password\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"Password\"\n              {...register('password', {\n                required: 'Password is required',\n                minLength: {\n                  value: 6,\n                  message: 'Your password needs to be at least 6 characters.',\n                },\n              })}\n            />\n            {errors.password && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                Password {errors?.password?.message?.split(' ').slice(1).join(' ')}\n              </p>\n            )}\n          </div>\n\n          <label className={signUpPageStyles.label}>Repeat Password</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"password\"\n              className={\n                errors.passwordConfirmation\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"Repeat Password\"\n              {...register('passwordConfirmation')}\n            />\n            {errors.passwordConfirmation && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                {errors?.passwordConfirmation?.message}\n              </p>\n            )}\n          </div>\n          <span className={signUpPageStyles.brakeLine} />\n          <div className={signUpPageStyles.agreeStatement}>\n            <input\n              type=\"checkbox\"\n              id=\"agree\"\n              checked={isChecked}\n              onChange={() => setIsChecked((prev) => !prev)}\n            />\n            <label className={signUpPageStyles.label} htmlFor=\"agree\">\n              I agree to the processing of my personal information\n            </label>\n          </div>\n          <input\n            type=\"submit\"\n            className={`${signUpPageStyles.input} ${signUpPageStyles.submitButton}`}\n            value=\"Create\"\n            disabled={!isChecked}\n          />\n          <h3 className={signUpPageStyles.alreadyHaveAccount}>\n            Already have an account?\n            <Link\n              to=\"/sign-in\"\n              className={signUpPageStyles.alreadyHaveAccount__link}\n            >\n              Sign In.\n            </Link>\n          </h3>\n        </form>\n      </div>\n    </div>\n</>\n  );\n};\n\nexport default SignUpPage;\n\n//sdfgsdfgsdfg@gmail.com\n","/Users/sanyadev/blog_app/src/components/Article/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/Article/Article.tsx",[],[],"/Users/sanyadev/blog_app/src/components/PageIsNotFound/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/PageIsNotFound/PageIsNotFound.tsx",[],[],"/Users/sanyadev/blog_app/src/logics/rtkQueryLogics/getArticlesFromApi.ts",[],[],"/Users/sanyadev/blog_app/src/slices/articleSlice.ts",[],[],"/Users/sanyadev/blog_app/src/components/Loader/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/Loader/Loader.tsx",[],[],"/Users/sanyadev/blog_app/src/variables/emailRegex.ts",[],[],"/Users/sanyadev/blog_app/src/slices/userRegistration.ts",[],[],"/Users/sanyadev/blog_app/src/slices/userLogin.ts",[],[],"/Users/sanyadev/blog_app/src/logics/date/formateDate.ts",[],[],"/Users/sanyadev/blog_app/src/logics/errors/callLoginErrors.ts",[],[],"/Users/sanyadev/blog_app/src/components/UserPage/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/UserPage/UserPage.tsx",[],[],"/Users/sanyadev/blog_app/src/slices/userProfileInfo.ts",[],[],"/Users/sanyadev/blog_app/src/components/CustomArticle/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/CustomArticle/CustomArticle.tsx",[],[],"/Users/sanyadev/blog_app/src/slices/fullArticlePage.ts",[],[],"/Users/sanyadev/blog_app/src/components/FullPageArticle/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/FullPageArticle/FullPageArticle.tsx",["175"],[],{"ruleId":"176","severity":2,"message":"177","line":45,"column":5,"nodeType":"178","messageId":"179","endLine":45,"endColumn":18,"suppressions":"180"},{"ruleId":"176","severity":2,"message":"177","line":48,"column":5,"nodeType":"178","messageId":"179","endLine":48,"endColumn":18,"suppressions":"181"},{"ruleId":"176","severity":2,"message":"177","line":61,"column":5,"nodeType":"178","messageId":"179","endLine":61,"endColumn":18,"suppressions":"182"},{"ruleId":"183","severity":1,"message":"184","line":89,"column":21,"nodeType":"185","messageId":"186","endLine":89,"endColumn":24,"suggestions":"187"},{"ruleId":"183","severity":1,"message":"184","line":77,"column":21,"nodeType":"185","messageId":"186","endLine":77,"endColumn":24,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":79,"column":17,"nodeType":"191","endLine":82,"endColumn":19},"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment",["192"],["193"],["194"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["195","196"],["197","198"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"kind":"199","justification":"200"},{"kind":"199","justification":"200"},{"kind":"199","justification":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"204","fix":"205","desc":"206"},{"messageId":"201","fix":"207","desc":"203"},{"messageId":"204","fix":"208","desc":"206"},"directive","","suggestUnknown",{"range":"209","text":"210"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"209","text":"211"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"212","text":"210"},{"range":"212","text":"211"},[2735,2738],"unknown","never",[2237,2240]]