[{"/Users/sanyadev/blog_app/src/index.tsx":"1","/Users/sanyadev/blog_app/src/App.tsx":"2","/Users/sanyadev/blog_app/src/store/index.ts":"3","/Users/sanyadev/blog_app/src/components/LoginPage/index.ts":"4","/Users/sanyadev/blog_app/src/components/SignUpPage/index.ts":"5","/Users/sanyadev/blog_app/src/components/UserPage/index.ts":"6","/Users/sanyadev/blog_app/src/components/Header/index.ts":"7","/Users/sanyadev/blog_app/src/components/CustomArticle/index.ts":"8","/Users/sanyadev/blog_app/src/slices/userRegistration.ts":"9","/Users/sanyadev/blog_app/src/slices/userLogin.ts":"10","/Users/sanyadev/blog_app/src/reducers/rootReducer.ts":"11","/Users/sanyadev/blog_app/src/slices/fullArticlePage.ts":"12","/Users/sanyadev/blog_app/src/components/ArticleList/index.ts":"13","/Users/sanyadev/blog_app/src/components/PageIsNotFound/index.ts":"14","/Users/sanyadev/blog_app/src/logics/rtkQueryLogics/getArticlesFromApi.ts":"15","/Users/sanyadev/blog_app/src/slices/userProfileInfo.ts":"16","/Users/sanyadev/blog_app/src/slices/articleSlice.ts":"17","/Users/sanyadev/blog_app/src/components/LoginPage/LoginPage.tsx":"18","/Users/sanyadev/blog_app/src/components/UserPage/UserPage.tsx":"19","/Users/sanyadev/blog_app/src/components/SignUpPage/SignUpPage.tsx":"20","/Users/sanyadev/blog_app/src/components/Header/Header.tsx":"21","/Users/sanyadev/blog_app/src/components/ArticleList/ArticleList.tsx":"22","/Users/sanyadev/blog_app/src/components/PageIsNotFound/PageIsNotFound.tsx":"23","/Users/sanyadev/blog_app/src/components/CustomArticle/CustomArticle.tsx":"24","/Users/sanyadev/blog_app/src/variables/emailRegex.ts":"25","/Users/sanyadev/blog_app/src/logics/errors/callLoginErrors.ts":"26","/Users/sanyadev/blog_app/src/logics/date/formateDate.ts":"27","/Users/sanyadev/blog_app/src/components/Article/index.ts":"28","/Users/sanyadev/blog_app/src/components/Loader/index.ts":"29","/Users/sanyadev/blog_app/src/components/Article/Article.tsx":"30","/Users/sanyadev/blog_app/src/components/Loader/Loader.tsx":"31","/Users/sanyadev/blog_app/src/components/FullArticle/index.ts":"32","/Users/sanyadev/blog_app/src/components/FullArticle/FullArticle.tsx":"33","/Users/sanyadev/blog_app/src/slices/postAnArticle.ts":"34"},{"size":327,"mtime":1682594077218,"results":"35","hashOfConfig":"36"},{"size":1458,"mtime":1683057129802,"results":"37","hashOfConfig":"36"},{"size":1000,"mtime":1683102794835,"results":"38","hashOfConfig":"36"},{"size":64,"mtime":1682030949535,"results":"39","hashOfConfig":"36"},{"size":67,"mtime":1682030914770,"results":"40","hashOfConfig":"36"},{"size":61,"mtime":1682413189866,"results":"41","hashOfConfig":"36"},{"size":55,"mtime":1682032777808,"results":"42","hashOfConfig":"36"},{"size":76,"mtime":1682677608840,"results":"43","hashOfConfig":"36"},{"size":1039,"mtime":1682458061799,"results":"44","hashOfConfig":"36"},{"size":969,"mtime":1682460038446,"results":"45","hashOfConfig":"36"},{"size":728,"mtime":1683102703358,"results":"46","hashOfConfig":"36"},{"size":910,"mtime":1683020397814,"results":"47","hashOfConfig":"36"},{"size":70,"mtime":1682077699473,"results":"48","hashOfConfig":"36"},{"size":79,"mtime":1682155360722,"results":"49","hashOfConfig":"36"},{"size":687,"mtime":1682165334069,"results":"50","hashOfConfig":"36"},{"size":933,"mtime":1682635158327,"results":"51","hashOfConfig":"36"},{"size":875,"mtime":1683018055057,"results":"52","hashOfConfig":"36"},{"size":5279,"mtime":1683102409831,"results":"53","hashOfConfig":"36"},{"size":1637,"mtime":1683103956292,"results":"54","hashOfConfig":"36"},{"size":7573,"mtime":1683025565607,"results":"55","hashOfConfig":"36"},{"size":1147,"mtime":1683055967530,"results":"56","hashOfConfig":"36"},{"size":2312,"mtime":1683039359088,"results":"57","hashOfConfig":"36"},{"size":407,"mtime":1682156536524,"results":"58","hashOfConfig":"36"},{"size":6391,"mtime":1683120642705,"results":"59","hashOfConfig":"36"},{"size":80,"mtime":1682296770797,"results":"60","hashOfConfig":"36"},{"size":286,"mtime":1682599833093,"results":"61","hashOfConfig":"36"},{"size":498,"mtime":1682943096716,"results":"62","hashOfConfig":"36"},{"size":58,"mtime":1682077835127,"results":"63","hashOfConfig":"36"},{"size":55,"mtime":1682162654149,"results":"64","hashOfConfig":"36"},{"size":2420,"mtime":1683025185073,"results":"65","hashOfConfig":"36"},{"size":438,"mtime":1682162746384,"results":"66","hashOfConfig":"36"},{"size":71,"mtime":1683056727607,"results":"67","hashOfConfig":"36"},{"size":4004,"mtime":1683056885403,"results":"68","hashOfConfig":"36"},{"size":1220,"mtime":1683110028576,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t0738b",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"76"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sanyadev/blog_app/src/index.tsx",[],[],"/Users/sanyadev/blog_app/src/App.tsx",[],[],[],"/Users/sanyadev/blog_app/src/store/index.ts",[],[],[],"/Users/sanyadev/blog_app/src/components/LoginPage/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/SignUpPage/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/UserPage/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/Header/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/CustomArticle/index.ts",[],[],"/Users/sanyadev/blog_app/src/slices/userRegistration.ts",[],[],"/Users/sanyadev/blog_app/src/slices/userLogin.ts",[],[],"/Users/sanyadev/blog_app/src/reducers/rootReducer.ts",[],[],"/Users/sanyadev/blog_app/src/slices/fullArticlePage.ts",[],[],"/Users/sanyadev/blog_app/src/components/ArticleList/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/PageIsNotFound/index.ts",[],[],"/Users/sanyadev/blog_app/src/logics/rtkQueryLogics/getArticlesFromApi.ts",[],[],"/Users/sanyadev/blog_app/src/slices/userProfileInfo.ts",[],[],"/Users/sanyadev/blog_app/src/slices/articleSlice.ts",[],[],"/Users/sanyadev/blog_app/src/components/LoginPage/LoginPage.tsx",["176"],[],"import React, { FC, useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { ToastContainer } from 'react-toastify';\n\nimport { emailRegex } from '../../variables/emailRegex';\nimport signUpPageStyles from '../SignUpPage/SignUpPage.module.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useLoginUserMutation, UserLoginDetails } from '../../slices/userLogin';\nimport { callNotification } from '../../logics/errors/callLoginErrors';\nimport { useAppDispatch, useAppSelector } from '../../store';\nimport { changeUserActiveStatus, uploadUserInfo } from '../../slices/userProfileInfo';\n\nimport loginPageStyles from './LoginPage.module.scss';\n\nconst LoginPage: FC = () => {\n  const [isLoginButtonDisabled, setIsLoginButtonDisabled] =\n    useState<boolean>(true);\n\n  const [isLoginError, setIsLoginError] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoginError) {\n      callNotification('Email or password is incorrect', 'error');\n    }\n  }, [isLoginError]);\n\n  const [loginUserMutation] = useLoginUserMutation();\n  const dispatch = useAppDispatch();\n  const userInfo = useAppSelector((state) => state.userInfo.userDatas);\n\n  useEffect(() => {\n    console.log(userInfo, 'userInfo');\n  }, [userInfo]);\n\n  const schema = yup\n    .object({\n      email: yup\n        .string()\n        .min(6)\n        .max(35)\n        .matches(emailRegex, 'Please enter a valid email address')\n        .required(),\n      password: yup.string().min(6).max(25).required(),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    watch,\n  } = useForm<FormData>({\n    resolver: yupResolver(schema),\n    mode: 'onBlur',\n  });\n\n  const loginInput = watch('email');\n  const passwordInput = watch('password');\n\n  useEffect(() => {\n    if (loginInput?.match(emailRegex) && passwordInput?.length >= 6) {\n      setIsLoginButtonDisabled(false);\n    } else {\n      setIsLoginButtonDisabled(true);\n    }\n  }, [loginInput, passwordInput]);\n\n  const submitAuthDetails = async (data: FormData): Promise<void> => {\n    const userLoginDatas: UserLoginDetails = {\n      user: {\n        email: data?.email,\n        password: data?.password,\n      },\n    };\n\n    try {\n      const userDatas = await loginUserMutation(userLoginDatas).unwrap();\n      setIsLoginError(false);\n      if ('user' in userDatas) {\n        dispatch(uploadUserInfo({ userDatas: userDatas.user }));\n        localStorage.setItem('token', userDatas.user.token);\n        dispatch(changeUserActiveStatus({ isUserLoggedIn: true }));\n        return navigate('/profile');\n      }\n    } catch (error: any) {\n      if (error?.status === 403) {\n        setIsLoginError(true);\n      }\n    }\n    reset();\n  };\n\n  type FormData = yup.InferType<typeof schema>;\n\n  return (\n    <div className={loginPageStyles.main}>\n      <div\n        className={`${loginPageStyles.container} ${signUpPageStyles.container}`}\n      >\n        <h3 className={signUpPageStyles.title}>Sign In</h3>\n        <form\n          className={signUpPageStyles.form}\n          onSubmit={handleSubmit(submitAuthDetails)}\n        >\n          <label className={signUpPageStyles.label}>Email address</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"text\"\n              className={\n                errors.email\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"Email address\"\n              {...register('email', { required: 'Email Address is required' })}\n            />\n            {errors.email && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                Please enter a valid email address\n              </p>\n            )}\n          </div>\n          <label className={signUpPageStyles.label}>Password</label>\n          <div className={signUpPageStyles.inputWrapper}>\n            <input\n              type=\"password\"\n              className={\n                errors.password\n                  ? signUpPageStyles.inputError\n                  : signUpPageStyles.input\n              }\n              placeholder=\"Password\"\n              {...register('password', { required: 'Password is required' })}\n            />\n            {errors.password && (\n              <p role=\"alert\" className={signUpPageStyles.inputErrorTextLabel}>\n                Your password needs to be at least 6 characters.\n              </p>\n            )}\n          </div>\n          <ToastContainer />\n          <input\n            type=\"submit\"\n            className={`${signUpPageStyles.input} ${signUpPageStyles.submitButton}`}\n            value=\"Login\"\n            disabled={isLoginButtonDisabled}\n          />\n          <h3 className={signUpPageStyles.alreadyHaveAccount}>\n            Already have an account?\n            <Link\n              to=\"/sign-up\"\n              className={signUpPageStyles.alreadyHaveAccount__link}\n            >\n              Sign Up.\n            </Link>\n          </h3>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","/Users/sanyadev/blog_app/src/components/UserPage/UserPage.tsx",[],[],"/Users/sanyadev/blog_app/src/components/SignUpPage/SignUpPage.tsx",["177"],[],"/Users/sanyadev/blog_app/src/components/Header/Header.tsx",[],[],"/Users/sanyadev/blog_app/src/components/ArticleList/ArticleList.tsx",[],["178","179","180"],"/Users/sanyadev/blog_app/src/components/PageIsNotFound/PageIsNotFound.tsx",[],[],"/Users/sanyadev/blog_app/src/components/CustomArticle/CustomArticle.tsx",[],["181"],"/Users/sanyadev/blog_app/src/variables/emailRegex.ts",[],[],"/Users/sanyadev/blog_app/src/logics/errors/callLoginErrors.ts",[],[],"/Users/sanyadev/blog_app/src/logics/date/formateDate.ts",[],[],"/Users/sanyadev/blog_app/src/components/Article/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/Loader/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/Article/Article.tsx",[],[],"/Users/sanyadev/blog_app/src/components/Loader/Loader.tsx",[],[],"/Users/sanyadev/blog_app/src/components/FullArticle/index.ts",[],[],"/Users/sanyadev/blog_app/src/components/FullArticle/FullArticle.tsx",["182"],[],"import React, { FC, useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Popconfirm } from 'antd';\nimport Heart from 'react-heart';\nimport './popupAntdStyles.css';\n\nimport { useFullArticleQuery } from '../../slices/fullArticlePage';\nimport { useAppSelector } from '../../store';\nimport articleStyles from '../Article/Article.module.scss';\nimport { formatDate } from '../../logics/date/formateDate';\nimport Loader from '../Loader';\n\nimport styles from './FullArticle.module.scss';\n\nconst FullArticle: FC = () => {\n  const slug = useAppSelector((state) => state.article.slug) || '';\n  const { data, error, isLoading } = useFullArticleQuery({ slug });\n  const [isOpenPopup, setIsOpenPopup] = useState<boolean>(false);\n  const [isPopupLoading, setIsPopupLoading] = useState<boolean>(false);\n  const isUserLoggedIn = useAppSelector(\n    (state) => state.userInfo.isUserLoggedIn,\n  );\n\n  const showPopconfirm = (): void => {\n    setIsOpenPopup(true);\n  };\n\n  const handleOk = (): void => {\n    setIsPopupLoading(true);\n\n    setTimeout((): void => {\n      setIsOpenPopup(false);\n      setIsPopupLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = (): void => {\n    console.log('Clicked cancel button'); //потом потребуется для удаления\n    setIsOpenPopup(false);\n  };\n\n  useEffect(() => {\n    console.log(data, 'data');\n  }, [data]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className={styles.main}>\n          <div className={styles.container}>\n            <header>\n              <div>\n                <div className={styles.headerFirstPart}>\n                  <h4 className={styles.title}>{data?.article?.title}</h4>\n                  <div className={articleStyles.likeBtn}>\n                    <Heart\n                      animationScale={1.1}\n                      onClick={() => null}\n                      isActive={false}\n                    />\n                  </div>\n                  <span>12</span>\n                </div>\n                {data?.article?.tagList.map((tag) => (\n                  <span key={tag} className={styles.tag}>\n                    {tag}\n                  </span>\n                ))}\n              </div>\n              <div className={styles.user}>\n                <div>\n                  <h5 className={styles.userName}>\n                    {data?.article?.author.username}\n                  </h5>\n                  <span className={styles.date}>\n                    {formatDate(data?.article?.createdAt)}\n                  </span>\n                </div>\n\n                <img\n                  src={data?.article?.author.image}\n                  className={styles.userAvatar}\n                />\n              </div>\n            </header>\n            <div className={styles.descriptionContainer}>\n              <p className={styles.description}>{data?.article?.description}</p>\n              {isUserLoggedIn ? (\n                <div className={styles.articleEditButtons}>\n                  <Popconfirm\n                    title=\"Are you sure to delete this article?\"\n                    open={isOpenPopup}\n                    onConfirm={handleOk}\n                    okButtonProps={{ loading: isPopupLoading }}\n                    onCancel={handleCancel}\n                    className=\"ant-popover-content\"\n                  >\n                    <button\n                      className={styles.deleteButton}\n                      onClick={showPopconfirm}\n                    >\n                      Delete\n                    </button>\n                  </Popconfirm>\n                  <button className={styles.editButton}>Edit</button>\n                </div>\n              ) : (\n                ''\n              )}\n            </div>\n            <main className={styles.mainBody}>\n              <ReactMarkdown>{data?.article?.body || ''}</ReactMarkdown>\n            </main>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FullArticle;\n","/Users/sanyadev/blog_app/src/slices/postAnArticle.ts",[],[],{"ruleId":"183","severity":1,"message":"184","line":90,"column":21,"nodeType":"185","messageId":"186","endLine":90,"endColumn":24,"suggestions":"187"},{"ruleId":"183","severity":1,"message":"184","line":77,"column":21,"nodeType":"185","messageId":"186","endLine":77,"endColumn":24,"suggestions":"188"},{"ruleId":"189","severity":2,"message":"190","line":46,"column":5,"nodeType":"191","messageId":"192","endLine":46,"endColumn":18,"suppressions":"193"},{"ruleId":"189","severity":2,"message":"190","line":49,"column":5,"nodeType":"191","messageId":"192","endLine":49,"endColumn":18,"suppressions":"194"},{"ruleId":"189","severity":2,"message":"190","line":61,"column":5,"nodeType":"191","messageId":"192","endLine":61,"endColumn":18,"suppressions":"195"},{"ruleId":"189","severity":2,"message":"190","line":101,"column":7,"nodeType":"191","messageId":"192","endLine":101,"endColumn":20,"suppressions":"196"},{"ruleId":"197","severity":1,"message":"198","line":83,"column":17,"nodeType":"199","endLine":86,"endColumn":19},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["200","201"],["202","203"],"@typescript-eslint/ban-ts-comment","Do not use \"@ts-ignore\" because it alters compilation errors.","Line","tsDirectiveComment",["204"],["205"],["206"],["207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"messageId":"208","fix":"209","desc":"210"},{"messageId":"211","fix":"212","desc":"213"},{"messageId":"208","fix":"214","desc":"210"},{"messageId":"211","fix":"215","desc":"213"},{"kind":"216","justification":"217"},{"kind":"216","justification":"217"},{"kind":"216","justification":"217"},{"kind":"216","justification":"217"},"suggestUnknown",{"range":"218","text":"219"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"218","text":"220"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"221","text":"219"},{"range":"221","text":"220"},"directive","",[2813,2816],"unknown","never",[2237,2240]]