{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { rootReducer } from '../reducers/rootReducer';\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(articlesApi.middleware)\n});\nexport const useAppDispatch = useDispatch;\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["configureStore","useDispatch","useSelector","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat","articlesApi","useAppDispatch","useAppSelector"],"sources":["/Users/sanyadev/blog_app/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(articlesApi.middleware),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport type RootState = ReturnType<typeof store.getState>;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAE5E,SAASC,WAAW,QAAQ,yBAAyB;AAErD,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAEF,WAAW;EACpBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,EAAE,CAACC,MAAM,CAACC,WAAW,CAACH,UAAU;AACxD,CAAC,CAAC;AAGF,OAAO,MAAMI,cAAiC,GAAGT,WAAW;AAC5D,OAAO,MAAMU,cAA+C,GAAGT,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}